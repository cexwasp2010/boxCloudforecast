{"ast":null,"code":"'use strict';\n\nvar parse5 = require('parse5');\n\nvar htmlparser2Adapter = require('parse5-htmlparser2-tree-adapter');\n\nexports.parse = function (content, options, isDocument) {\n  var opts = {\n    scriptingEnabled: typeof options.scriptingEnabled === 'boolean' ? options.scriptingEnabled : true,\n    treeAdapter: htmlparser2Adapter,\n    sourceCodeLocationInfo: options.sourceCodeLocationInfo\n  };\n  var context = options.context;\n  return isDocument ? parse5.parse(content, opts) : parse5.parseFragment(context, content, opts);\n};\n\nexports.render = function (dom) {\n  // `dom-serializer` passes over the special \"root\" node and renders the\n  // node's children in its place. To mimic this behavior with `parse5`, an\n  // equivalent operation must be applied to the input array.\n  var nodes = 'length' in dom ? dom : [dom];\n\n  for (var index = 0; index < nodes.length; index += 1) {\n    if (nodes[index].type === 'root') {\n      nodes.splice.apply(nodes, [index, 1].concat(nodes[index].children));\n    }\n  }\n\n  return parse5.serialize({\n    children: nodes\n  }, {\n    treeAdapter: htmlparser2Adapter\n  });\n};","map":null,"metadata":{},"sourceType":"module"}