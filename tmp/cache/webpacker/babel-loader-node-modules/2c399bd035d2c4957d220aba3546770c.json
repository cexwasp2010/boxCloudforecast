{"ast":null,"code":"var _jsxFileName = \"/home/cesar/Documentos/CloudForecast-BoxFactory/app/javascript/components/BoxForm.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\"; // TODO: Add MouseOver animation using the images for each size; When hovering over the image, the *Open should be visible to our client\n\nimport SmallBox from './images/box-small.png';\nimport SmallBoxOpen from './images/box-small-open.png';\nimport MediumBox from './images/box-medium.png';\nimport MediumBoxOpen from './images/box-medium-open.png';\nimport LargeBox from './images/box-large.png';\nimport LargeBoxOpen from './images/box-large-open.png';\nimport NoSelection from './images/no-selection.png';\nimport axios from 'axios';\nimport './css/index.css';\n\nfunction BoxForm(props) {\n  var _useState = useState(props.size),\n      _useState2 = _slicedToArray(_useState, 2),\n      size = _useState2[0],\n      setSize = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      label = _useState4[0],\n      setLabel = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var saveBox = function saveBox() {\n    // TODO: Implement form validation to match the DB schema to help users during the Box creation process\n    console.log(\"Hello\");\n    axios.post(\"/ajax_post\", {\n      size: size,\n      label: label\n    }).then(function (res) {\n      if (res.data.success) {\n        window.location.href = '/box';\n      } else {\n        setError(res.data.error);\n      }\n    });\n  };\n\n  var boxImage = function boxImage(size) {\n    switch (size) {\n      case 'small':\n        return SmallBox;\n\n      case 'medium':\n        return MediumBox;\n\n      case 'large':\n        return LargeBox;\n\n      default:\n        return NoSelection;\n    }\n  };\n\n  var handleSizeChange = function handleSizeChange(event) {\n    setSize(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Design Your Box\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Step 1: Choose a size:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: size,\n    onChange: handleSizeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Small\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Large\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Step 2: Label this box:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Label\",\n    onChange: function onChange(e) {\n      return setLabel(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"boxPreview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: boxImage(size),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), label !== '' && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Preview: \", label)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Save as new box\"), error !== '' && /*#__PURE__*/React.createElement(\"div\", {\n    key: \"error\",\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, error))));\n}\n\nBoxForm.propTypes = {\n  size: PropTypes.string,\n  label: PropTypes.string,\n  open: PropTypes.bool\n};\nexport default BoxForm;","map":{"version":3,"sources":["/home/cesar/Documentos/CloudForecast-BoxFactory/app/javascript/components/BoxForm.jsx"],"names":["React","useState","PropTypes","SmallBox","SmallBoxOpen","MediumBox","MediumBoxOpen","LargeBox","LargeBoxOpen","NoSelection","axios","BoxForm","props","size","setSize","label","setLabel","error","setError","saveBox","console","log","post","then","res","data","success","window","location","href","boxImage","handleSizeChange","event","target","value","e","propTypes","string","open","bool"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n\nimport PropTypes from \"prop-types\"\n\n// TODO: Add MouseOver animation using the images for each size; When hovering over the image, the *Open should be visible to our client\nimport SmallBox from './images/box-small.png'\nimport SmallBoxOpen from './images/box-small-open.png'\nimport MediumBox from './images/box-medium.png'\nimport MediumBoxOpen from './images/box-medium-open.png'\nimport LargeBox from './images/box-large.png'\nimport LargeBoxOpen from './images/box-large-open.png'\nimport NoSelection from './images/no-selection.png'\n\nimport axios from 'axios';\n\nimport './css/index.css'\n\nfunction BoxForm(props) {\n  const [size, setSize] = useState(props.size);\n  const [label, setLabel] = useState('');\n  const [error, setError] = useState('')\n\n  const saveBox = () => {\n    // TODO: Implement form validation to match the DB schema to help users during the Box creation process\n    console.log(\"Hello\");\n    axios.post(`/ajax_post`, {size: size, label: label})\n    .then(res => {\n      if (res.data.success) {\n        window.location.href = '/box'\n      } else {\n        setError(res.data.error)\n      }\n    })\n  }\n\n  const boxImage = (size) => {\n    switch (size) {\n      case 'small':\n        return SmallBox\n      case 'medium':\n        return MediumBox\n      case 'large':\n        return LargeBox\n      default:\n        return NoSelection\n    }\n  }\n\n  const handleSizeChange = (event) => {\n    setSize(event.target.value);\n  }\n\n  return (\n    <React.Fragment>\n      <h3>Design Your Box</h3>\n\n      <div className='boxForm'>\n        <div>\n          <div>\n            Step 1: Choose a size:\n          </div>\n          <div>\n            <select value={size} onChange={handleSizeChange}>\n              <option value=\"small\">Small</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"large\">Large</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div>\n            Step 2: Label this box:\n          </div>\n          <div>\n            <input type=\"text\" placeholder=\"Label\" onChange={e => setLabel(e.target.value)} />\n          </div>\n        </div>\n        <div className='boxPreview'>\n          <img src={boxImage(size)}/>\n\n          {label !== '' && (\n            <h2>Preview: {label}</h2>\n          )}\n        </div>\n        <div>\n          <button onClick={saveBox}>Save as new box</button>\n\n          {error !== '' && (\n            <div key='error' className='error'>{error}</div>\n          )}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nBoxForm.propTypes = {\n  size: PropTypes.string,\n  label: PropTypes.string,\n  open: PropTypes.bool\n};\nexport default BoxForm\n"]},"metadata":{},"sourceType":"module"}