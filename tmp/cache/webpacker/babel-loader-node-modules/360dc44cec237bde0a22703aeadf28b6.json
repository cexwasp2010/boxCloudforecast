{"ast":null,"code":"'use strict';\n/** @module cheerio/forms */\n// https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n// https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n\nvar submittableSelector = 'input,select,textarea,keygen';\nvar r20 = /%20/g;\nvar rCRLF = /\\r?\\n/g;\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @returns {string} The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\n\nexports.serialize = function () {\n  // Convert form elements into name/value objects\n  var arr = this.serializeArray(); // Serialize each element into a key/value string\n\n  var retArr = arr.map(function (data) {\n    return encodeURIComponent(data.name) + '=' + encodeURIComponent(data.value);\n  }); // Return the resulting serialization\n\n  return retArr.join('&').replace(r20, '+');\n};\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @example\n *   $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n *   //=> [ { name: 'foo', value: 'bar' } ]\n *\n * @returns {object[]} The serialized form.\n * @this {Cheerio}\n * @see {@link https://api.jquery.com/serializeArray/}\n */\n\n\nexports.serializeArray = function () {\n  // Resolve all form elements from either forms or collections of form elements\n  var Cheerio = this.constructor;\n  return this.map(function (_, elem) {\n    var $elem = Cheerio(elem);\n\n    if (elem.name === 'form') {\n      return $elem.find(submittableSelector).toArray();\n    }\n\n    return $elem.filter(submittableSelector).toArray();\n  }).filter( // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n  '[name!=\"\"]:enabled' + // and cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n  ':not(:submit, :button, :image, :reset, :file)' + // and are either checked/don't have a checkable state\n  ':matches([checked], :not(:checkbox, :radio))' // Convert each of the elements to its value(s)\n  ).map(function (_, elem) {\n    var $elem = Cheerio(elem);\n    var name = $elem.attr('name');\n    var value = $elem.val(); // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n\n    if (value == null) {\n      value = '';\n    } // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n\n\n    if (Array.isArray(value)) {\n      return value.map(function (val) {\n        // We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n        //   These can occur inside of `<textarea>'s`\n        return {\n          name: name,\n          value: val.replace(rCRLF, '\\r\\n')\n        };\n      }); // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n    }\n\n    return {\n      name: name,\n      value: value.replace(rCRLF, '\\r\\n')\n    }; // Convert our result to an array\n  }).get();\n};","map":null,"metadata":{},"sourceType":"module"}